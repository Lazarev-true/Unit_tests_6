1. test_get_lists_averages - проверяет, что метод get_list() правильно вычисляет среднее значение для двух непустых списков.

2. test_for_empty_lists - проверяет, что метод get_list() правильно вычисляет среднее значение для комбинаций пустого и непустого списка.

3. test_for_non_empty_lists - проверяет, что метод get_list() правильно вычисляет среднее значение для двух непустых списков.

4. test_checking_average_value_when_greater - проверяет, что метод list_comparison() выводит правильное сообщение, когда среднее значение первого списка больше среднего значения второго списка.

5. test_checking_average_value_when_smaller - проверяет, что метод list_comparison() выводит правильное сообщение, когда среднее значение первого списка меньше среднего значения второго списка.

6. test_checking_average_value_when_equal - проверяет, что метод list_comparison() выводит правильное сообщение, когда средние значения двух списков равны.

7. test_init - проверяет, что список lst1 и lst2 правильно инициализируются при создании экземпляра класса NumbersList.

Я выбрал эти сценарии, чтобы покрыть основные функциональные возможности класса и проверить его поведение в различных ситуациях, таких как пустые списки, не пустые списки и разные значения. 
